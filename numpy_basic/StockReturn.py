import numpy as np
c = np.loadtxt('data.csv',delimiter=",",usecols=(6,),unpack=True)
# 当unpack=True时，加载的数据会被解包成多个单独的数组
#print(c)
"""
[336.1  339.32 345.03 344.32 343.44 346.5  351.88 355.2  358.16 354.54
 356.85 359.18 359.9  363.13 358.3  350.56 338.61 342.62 342.88 348.16
 353.21 349.31 352.12 359.56 360.   355.36 355.76 352.47 346.67 351.99]
"""
print(len(c)) # 30
#print(np.diff(c))
"""
[  3.22   5.71  -0.71  -0.88   3.06   5.38   3.32   2.96  -3.62   2.31
   2.33   0.72   3.23  -4.83  -7.74 -11.95   4.01   0.26   5.28   5.05
  -3.9    2.81   7.44   0.44  -4.64   0.4   -3.29  -5.8    5.32]
"""
print(len(np.diff(c))) # 29
returns = np.diff(c) / c[:-1] ### ！！！！！
#print(returns)
"""
[ 0.00958048  0.01682777 -0.00205779 -0.00255576  0.00890985  0.0155267
  0.00943503  0.00833333 -0.01010721  0.00651548  0.00652935  0.00200457
  0.00897472 -0.01330102 -0.02160201 -0.03408832  0.01184253  0.00075886
  0.01539897  0.01450483 -0.01104159  0.00804443  0.02112916  0.00122372
 -0.01288889  0.00112562 -0.00924781 -0.0164553   0.01534601]
"""
print(len(returns)) # 29

# standard deviation of return 
std_R = np.std(returns)
print(std_R) # 0.012922134436826306


# 對數報酬 logreturn -> ln(Pt / Pt-1) = ln(Pt) - ln(Pt-1)
logreturn = np.diff(np.log(c))
print(logreturn)
"""
[ 0.00953488  0.01668775 -0.00205991 -0.00255903  0.00887039  0.01540739
  0.0093908   0.0082988  -0.01015864  0.00649435  0.00650813  0.00200256
  0.00893468 -0.01339027 -0.02183875 -0.03468287  0.01177296  0.00075857
  0.01528161  0.01440064 -0.011103    0.00801225  0.02090904  0.00122297
 -0.01297267  0.00112499 -0.00929083 -0.01659219  0.01522945]
"""
# 大於零的ＲＥＴＵＲＮ 's position
posretindices = np.where(returns > 0)
print(posretindices)
"""
(array([ 0,  1,  4,  5,  6,  7,  9, 10, 11, 12, 16, 17, 18, 19, 21, 22, 23,
       25, 28]),)
"""
# 波動性勢報酬率的標準差 !!!
# 布朗運動的變異數 和時間成正比 -> 標準差（波動率）與時間成平方根正比

# 日波動性
# daily_vol  要用對數報酬 去算標準差（符合ＢＳ的定義）
daily_vol = np.std(logreturn)
print(daily_vol) # 0.012971835641060817

# 年波動性 ＝ 日波動性 ＊ sqrt(252)      (252:trading day a year)
annual_vol = daily_vol * np.sqrt(252)
print(annual_vol) # 0.20592150692550626

# 年波動性 = 月波動性 ＊ sqrt(12) (12:month)
monthly_vol = annual_vol * np.sqrt(1/12)
print(monthly_vol) # 0.05944441872768721



# 對於波動性的概念
# 指數股票的話大約在 20%上下
# 個股 20~100 %
# 匯率的話
# 新台幣5~6% 日元15% (大約5~20都有可能)
# 利率 （5%以下合理）
# 大概的感覺





